# MSYS2 + MinGW-W64 Makefile for libtinydicom windows DLL 
# (C)2016 Raphael Kim / rageworx
#

# Compiler configure.
GCC = gcc
GPP = g++
AR  = ar
WRC = windres

SOURCEDIR = ./src
LIBSRCDIR = ./src_dll
OUTDIR    = ./lib
RESDIR    = ./res
INSTDIR   = /usr/local
INSTDIRL  = $(INSTDIR)/lib
INSTDIRH  = $(INSTDIR)/include

OBJDIR := ./obj/dll
OUTBIN := libtinydicom

# Make all source code be compiled ..
SRCS = $(wildcard $(SOURCEDIR)/*.cpp)
OBJS = $(SRCS:$(SOURCEDIR)/%.cpp=$(OBJDIR)/%.o)
LOBJ = $(OBJDIR)/libdcm.o
ROBJ = $(OBJDIR)/winres.o

DEFINEOPT  = -DBUILD_DLL
DEFINEOPT += -DUNICODE -D_UNICODE

OPTIMIZEOPT := -O3 -s
MOREOPT := -mwindows

CFLAGS = -I$(SOURCEDIR) -I$(LIBSRCDIR) $(DEFINEOPT)
LFLAGS = -static $(OPTIMIZEOPT) $(MOREOPT)

all: prepare clean ${OUTDIR}/${OUTBIN}

prepare:
	@mkdir -p ${OBJDIR}
	@mkdir -p ${OUTDIR}

clean:
	@rm -rf ${OBJDIR}/*
	@rm -rf ${OUTDIR}/${OUTBIN}.dll

install: $(OUTDIR)/$(OUTBIN)
	@echo "Installing ..."
	@cp -f $< $(INSTDIRL)
	@cp -f $(LIBSRCDIR)/libdcm.h $(INSTDIRH)

uninstall: $(INSTDIRL)/$(OUTBIN)
	@echo "Uninstalling ..."
	@rm -f $<
	@rm -f $(INSTDIRH)/libdcm.h

$(OBJS): $(OBJDIR)/%.o: $(SOURCEDIR)/%.cpp
	@echo "building $@ ..."
	@$(GPP) $(CFLAGS) -c $< -o $@

$(LOBJ): $(LIBSRCDIR)/libdcm.cpp
	@echo "building export $@ ..."
	@$(GPP) -I$(LIBSRCDIR) $(CFLAGS) -c $< -o $@
    
$(ROBJ): $(RESDIR)/winres.rc
	@echo "building resource $@ ..."
	$(WRC) $(CFLAGS) -i $< -o $@

$(OUTDIR)/$(OUTBIN): $(OBJS) $(LOBJ) $(ROBJ)
	@echo "generating $@ ..."
	@$(GPP) -shared $(OBJS) $(LOBJ) $(ROBJ) $(CFLAGS) $(LFLAGS) -o $@.dll
	@echo "copying headers ..."
	@cp $(LIBSRCDIR)/libdcm.h $(OUTDIR)
	@echo "done."
